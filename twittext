#!/usr/bin/env python
#-*- coding: utf-8 -*-

###########################################################################
# Twittext
# - Simple text-based Twitter client
# - Hirotaka Kawata <info@techno-st.net>
# - http://www.techno-st.net/wiki/Twittext
#
#    Copyright (C) 2009 Hirotaka Kawata <info@techno-st.net>
#
#    This file is part of "Twittext".
#
#    Twittext is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Twittext is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Twittext.  If not, see <http://www.gnu.org/licenses/>.
#
###########################################################################

import twoauth
import os
import sys
import locale
import ConfigParser
import signal
import urllib2
import getopt

__version__ = 0.5

def quit_me(signum = None, frame = None):
    exit()

def print_version():
    print """\
%(name)s %(version)s
Copyright (C) %(year)s %(copyright)s
%(name)s comes with ABSOLUTELY NO WARRANTY.
You may redistribute copies of %(name)s
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING.""" % {
        "name" : "Twittext",
        "version" : __version__,
        "year" : "2009-2010",
        "copyright" : "Hirotaka Kawata",
        }

def print_usage():
    print """\
Usage:
twittext [--add]
twittext [-u username] [--user=username]
twittext [-v]"""

if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(sys.argv[1:], "u:v",
                                   ("user=", "version", "add"))
    except getopt.GetoptError, e:
        print >>sys.stderr, "[Error]", e
        print_usage()
        exit()
    
    # print version
    for v in ("--version", "-v"):
        if v in sys.argv:
            print_version()
            exit()
    
    config_default = {
        "ckey": '3vqTk4hvNAno7NGzgBpdg',
        "csecret": 'PaeZx823Laxz3L5OF1R32zk9klW92tVyqn5mXjAoIw',
        "autoreload" : "60",
        }
    
    conf_name = 'settings.conf'
    conf_path  = os.path.join(
        os.path.dirname(__file__), conf_name)
    conf = ConfigParser.SafeConfigParser(config_default)

    add = False
    first = False
    
    if not os.path.isfile(conf_path):
        # settings does not exist
        first = True
    elif "--add" in sys.argv:
        # User Add
        add = True
        conf.read(conf_path)
    
    if add or first:
        # Get Access Token
        from gettoken import *
        (atoken, asecret, screen_name) = token(
            config_default["ckey"], 
            config_default["csecret"])    

        conf.add_section(screen_name)
        conf.set(screen_name, "atoken", atoken)
        conf.set(screen_name, "asecret", asecret)
        conf.set(screen_name, "footer", "")
        
        if first:
            conf.set("DEFAULT", "default_user", screen_name)
        
        fp = open(conf_path, "w")
        conf.write(fp)
        fp.close()

        if add: exit()
    
    from main import *
    
    conf.read(conf_path)
    settings = dict(conf.items("DEFAULT"))
    user_name = settings["default_user"]
    
    for o, v in opts:
        if o in ("-u", "--user"):
            user_name = v
            break
    
    user = dict(conf.items(user_name))
    
    # C-c to quit setting
    signal.signal(signal.SIGINT, quit_me)
    
    # Start
    try:
        tw = twittext(settings["ckey"], settings["csecret"],
                      user["atoken"], user["asecret"])
    except urllib2.URLError:
        print >>sys.stderr, "[Error] Cannot connect Twitter."
        exit()
    
    tw.statusfooter = user["footer"]
    tw.autoreload = int(settings["autoreload"]) * 1000
    tw.run()
